---
title: "team_04.qmd"
format: 
  html:
    toc: true
    toc-depth: 2
    embed-resources: true
    warning: false
author: "Ashsyahid, Owen, Sherwyn, Xuan Yu, Nigel"
number_sections: false
knitr:
  opts_chunk:
    message: false
---

```{r}
#| label: load-packages
#| warning: false
#| echo: false

library(ncdf4)
library(reshape2)
library(plotly)
```

# This one is done for the time being except the animation
```{r}
#| warning: false
#| echo: false

# Open the NetCDF file
ncfile <- nc_open("data/gistemp1200_GHCNv4_ERSSTv5.nc")

# Extract variables
lat <- ncvar_get(ncfile, "lat")
lon <- ncvar_get(ncfile, "lon")
time <- ncvar_get(ncfile, "time")
anomaly <- ncvar_get(ncfile, "tempanomaly")

# Extract attributes
scale_factor <- ncatt_get(ncfile, "tempanomaly", "scale_factor")$value
fill_value <- ncatt_get(ncfile, "tempanomaly", "_FillValue")$value

# Convert time variable to date
time_units <- ncatt_get(ncfile, "time", "units")$value
origin <- as.Date(sub("days since ", "", time_units))
date <- origin + time

# Apply scale factor and handle missing values
anomaly <- ifelse(anomaly == fill_value, NA, anomaly) * scale_factor

# Reshape the data into a long format dataframe
df <- expand.grid(lon = lon, lat = lat, time = date)
df$anomaly <- as.vector(anomaly)

# Close the NetCDF file
nc_close(ncfile)

# Display the first few rows of the dataframe
head(df)


# Assuming 'df' is already defined as your dataframe with temperature anomaly data

# Filter data for the desired date (example date)
date_to_plot <- as.Date("2024-04-15")
df_subset <- df[df$time == date_to_plot, ]

# Create the plot
plot <- plot_ly(df_subset, type = "scattergeo", mode = "markers",
                lon = ~lon, lat = ~lat,
                marker = list(size = 10,
                              symbol = "square",
                              opacity = 0.1,
                              color = ~anomaly,
                              colorscale = "RdBu",
                              colorbar = list(title = "Temperature Anomaly (C)")),
                text = paste("Longitude: ", df_subset$lon, "<br>Latitude: ", df_subset$lat,
                             "<br>Temperature Anomaly: ", df_subset$anomaly)) %>%
  layout(
    title = paste("Temperature Anomaly on", date_to_plot),
    geo = list(
      projection = list(type = "natural earth"),
      showcountries = TRUE,  # Show country borders
      countrycolor = "black",  # Country border color
      showframe = FALSE
    )
  )

# Show the plot
plot

# Create the 3D globe plot
plot <- plot_ly(df_subset, type = "scattergeo",
                lon = ~lon, lat = ~lat,
                marker = list(
                  size = 10,
                  symbol = "circle",
                  opacity = 0.5,
                  color = ~anomaly,
                  colorscale = "RdBu",
                  colorbar = list(title = "Temperature Anomaly (C)")
                ),
                text = paste("Longitude: ", df_subset$lon, "<br>Latitude: ", df_subset$lat,
                             "<br>Temperature Anomaly: ", df_subset$anomaly)) %>%
  layout(
    title = paste("Temperature Anomaly on", date_to_plot),
    geo = list(
      projection = list(
        type = "orthographic",  # Use orthographic projection for 3D globe effect
        rotation = list(lon = 0, lat = 0, roll = 0)  # Set initial view
      ),
      showcountries = TRUE,
      countrycolor = "rgb(50, 50, 50)"
    )
  )

# Show the plot
plot
```

# How to animate the plot
```{r}
#| warning: false
#| echo: false


set.seed(123)  # Setting seed for reproducibility

# Generate random data: Temperature anomalies over different years for specific locations
n <- 100  # Number of data points
df_subset <- data.frame(
  lon = runif(n, min = -180, max = 180),  # Random longitudes
  lat = runif(n, min = -90, max = 90),    # Random latitudes
  year = sample(seq(2000, 2020, by = 5), n, replace = TRUE),  # Random years between 2000 and 2020
  anomaly = runif(n, min = -5, max = 5)   # Random anomalies between -5 and 5 degrees Celsius
)

# Create the 3D globe plot
plot <- plot_ly(df_subset) %>%
  add_trace(
    type = "scattergeo",
    mode = "markers",
    lon = ~lon,
    lat = ~lat,
    frame = ~year,
    marker = list(
      size = 10,
      symbol = "circle",
      opacity = 0.5,
      color = ~anomaly,
      colorscale = "RdBu",
      colorbar = list(title = "Temperature Anomaly (Â°C)")
    ),
    text = ~paste("Longitude: ", lon, "<br>Latitude: ", lat, "<br>Temperature Anomaly: ", anomaly)
  ) %>%
  layout(
    title = "Temperature Anomaly Over Time",
    geo = list(
      projection = list(
        type = "orthographic",
        rotation = list(lon = 0, lat = 0, roll = 0)
      ),
      showcountries = TRUE,
      countrycolor = "rgb(50, 50, 50)"
    )
  ) %>%
  animation_opts(
    frame = 1000,  # Duration of each frame in milliseconds
    transition = 0,  # Duration of transition between frames
    easing = "linear"  # Animation easing function
  ) %>%
  animation_slider(
    currentvalue = list(prefix = "Year: ", font = list(size = 20))
  )

# Show the plot
plot

```